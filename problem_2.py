# PROBLEM 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.
#
# source - https://projecteuler.net/problem=2


def get_even_fibo_sum(max_val):
    sum = 0
    before_previous_val = 0
    previous_val = 0
    current_val = 1
    while current_val <= max_val:
        if current_val % 2 == 0:
            sum += current_val
        before_previous_val = previous_val
        previous_val = current_val
        current_val = previous_val + before_previous_val
    return sum


# TEST

assert get_even_fibo_sum(10) == 10

# ANSWER

print(get_even_fibo_sum(4_000_000))